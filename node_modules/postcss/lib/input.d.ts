import { CssSyntaxError, ProcessOptions } from './postcss.js'
import PreviousMap from './previous-map.js'

declare namespace Input {
  export interface FilePosition {
    
    column: number

    
    endColumn?: number

    endLine?: number

    file?: string

    line: number

    
    source?: string

    url: string
  }

  export { Input_ as default }
}

/**
 */
declare class Input_ {
  /**
   */
  css: string

  /**
   */
  document: string

  /**
   */
  file?: string


  hasBOM: boolean

  
  id?: string

 
  map: PreviousMap

 
  get from(): string

  /**
   * @param css  
   * @param opts 
   */
  constructor(css: string, opts?: ProcessOptions)

  error(
    message: string,
    start:
      | {
          column: number
          line: number
        }
      | {
          offset: number
        },
    end:
      | {
          column: number
          line: number
        }
      | {
          offset: number
        },
    opts?: { plugin?: CssSyntaxError['plugin'] }
  ): CssSyntaxError
  
  error(
    message: string,
    line: number,
    column: number,
    opts?: { plugin?: CssSyntaxError['plugin'] }
  ): CssSyntaxError
  error(
    message: string,
    offset: number,
    opts?: { plugin?: CssSyntaxError['plugin'] }
  ): CssSyntaxError
  /**

   * @param offset 
   */
  fromOffset(offset: number): { col: number; line: number } | null
  /**
   * @param line      
   * @param column   
   * @param endLine  
   * @param endColumn 
   *
   * @return 
   */
  origin(
    line: number,
    column: number,
    endLine?: number,
    endColumn?: number
  ): false | Input.FilePosition

  toJSON(): object
}

declare class Input extends Input_ {}

export = Input
