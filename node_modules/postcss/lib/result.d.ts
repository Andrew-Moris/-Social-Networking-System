import {
  Document,
  Node,
  Plugin,
  ProcessOptions,
  Root,
  SourceMap,
  TransformCallback,
  Warning,
  WarningOptions
} from './postcss.js'
import Processor from './processor.js'

declare namespace Result {
  export interface Message {
    [others: string]: any

  
    plugin?: string

 
    type: string
  }

  export interface ResultOptions extends ProcessOptions {
    
    node?: Node

 
    plugin?: string
  }

  export { Result_ as default }
}


declare class Result_<RootNode = Document | Root> {

  css: string

  lastPlugin: Plugin | TransformCallback

 
  map: SourceMap

 
  messages: Result.Message[]

  opts: Result.ResultOptions

  processor: Processor

 
  root: RootNode


  get content(): string

  /**
   * @param processor 
   * @param root     
   * @param opts   
   */
  constructor(processor: Processor, root: RootNode, opts: Result.ResultOptions)

  /**
   
   * @return 
   */
  toString(): string

  /**
   * @param text 
   * @param opts 
   * @return 
   */
  warn(message: string, options?: WarningOptions): Warning

  /**
   * @return 
   */
  warnings(): Warning[]
}

declare class Result<RootNode = Document | Root> extends Result_<RootNode> {}

export = Result
