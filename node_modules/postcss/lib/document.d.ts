import Container, { ContainerProps } from './container.js'
import { ProcessOptions } from './postcss.js'
import Result from './result.js'
import Root from './root.js'

declare namespace Document {
  export interface DocumentProps extends ContainerProps {
    nodes?: readonly Root[]

    raws?: Record<string, any>
  }

  export { Document_ as default }
}


declare class Document_ extends Container<Root> {
  nodes: Root[]
  parent: undefined
  type: 'document'

  constructor(defaults?: Document.DocumentProps)

  assign(overrides: Document.DocumentProps | object): this
  clone(overrides?: Partial<Document.DocumentProps>): this
  cloneAfter(overrides?: Partial<Document.DocumentProps>): this
  cloneBefore(overrides?: Partial<Document.DocumentProps>): this

  /**
   * @param opts 
   * @return
   */
  toResult(options?: ProcessOptions): Result
}

declare class Document extends Document_ {}

export = Document
