declare namespace postcssValueParser {
  interface BaseNode {
  
    sourceIndex: number;

    
    sourceEndIndex: number;

    value: string;
  }

  interface ClosableNode {
  
    unclosed?: true;
  }

  interface AdjacentAwareNode {
   
    before: string;

    
    after: string;
  }

  interface CommentNode extends BaseNode, ClosableNode {
    type: "comment";
  }

  interface DivNode extends BaseNode, AdjacentAwareNode {
    type: "div";
  }

  interface FunctionNode extends BaseNode, ClosableNode, AdjacentAwareNode {
    type: "function";

    nodes: Node[];
  }

  interface SpaceNode extends BaseNode {
    type: "space";
  }

  interface StringNode extends BaseNode, ClosableNode {
    type: "string";

  
    quote: '"' | "'";
  }

  interface UnicodeRangeNode extends BaseNode {
    type: "unicode-range";
  }

  interface WordNode extends BaseNode {
    type: "word";
  }


  type Node =
    | CommentNode
    | DivNode
    | FunctionNode
    | SpaceNode
    | StringNode
    | UnicodeRangeNode
    | WordNode;

  interface CustomStringifierCallback {
    /**
     * @param node
     * @returns 
     */
    (nodes: Node): string | undefined;
  }

  interface WalkCallback {
    /**
     * @param node 
     * @param index 
     * @param nodes 
     * @returns 
     */
    (node: Node, index: number, nodes: Node[]): void | boolean;
  }


  interface Dimension {
    number: string;
    unit: string;
  }


  interface ParsedValue {
   
    nodes: Node[];

    /**
   
     * @param callback
     * @param bubble   
     */
    walk(callback: WalkCallback, bubble?: boolean): this;
  }

  interface ValueParser {
    /**
     * @param value
     * @returns 
     */
    unit(value: string): Dimension | false;

    /**
     * @param nodes
     * @param custom 
     * @returns 
     */
    stringify(nodes: Node | Node[], custom?: CustomStringifierCallback): string;

    /**
     * @param nodes   
     * @param callback
     * @param bubble  
     */
    walk(nodes: Node[], callback: WalkCallback, bubble?: boolean): void;

    /**
     
     * @param value 
     */
    new (value: string): ParsedValue;

    /**
     
     
     * @param value 
     */
    (value: string): ParsedValue;
  }
}

declare const postcssValueParser: postcssValueParser.ValueParser;

export = postcssValueParser;
